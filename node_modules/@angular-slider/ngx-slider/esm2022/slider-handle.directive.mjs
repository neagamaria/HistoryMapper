import { Directive, HostBinding, } from '@angular/core';
import { SliderElementDirective } from './slider-element.directive';
import * as i0 from "@angular/core";
export class SliderHandleDirective extends SliderElementDirective {
    active = false;
    role = '';
    tabindex = '';
    ariaOrientation = '';
    ariaLabel = '';
    ariaLabelledBy = '';
    ariaValueNow = '';
    ariaValueText = '';
    ariaValueMin = '';
    ariaValueMax = '';
    focus() {
        this.elemRef.nativeElement.focus();
    }
    focusIfNeeded() {
        if (document.activeElement !== this.elemRef.nativeElement) {
            this.elemRef.nativeElement.focus();
        }
    }
    constructor(elemRef, renderer, changeDetectionRef) {
        super(elemRef, renderer, changeDetectionRef);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: SliderHandleDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.1.3", type: SliderHandleDirective, selector: "[ngxSliderHandle]", host: { properties: { "class.ngx-slider-active": "this.active", "attr.role": "this.role", "attr.tabindex": "this.tabindex", "attr.aria-orientation": "this.ariaOrientation", "attr.aria-label": "this.ariaLabel", "attr.aria-labelledby": "this.ariaLabelledBy", "attr.aria-valuenow": "this.ariaValueNow", "attr.aria-valuetext": "this.ariaValueText", "attr.aria-valuemin": "this.ariaValueMin", "attr.aria-valuemax": "this.ariaValueMax" } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: SliderHandleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngxSliderHandle]',
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }], propDecorators: { active: [{
                type: HostBinding,
                args: ['class.ngx-slider-active']
            }], role: [{
                type: HostBinding,
                args: ['attr.role']
            }], tabindex: [{
                type: HostBinding,
                args: ['attr.tabindex']
            }], ariaOrientation: [{
                type: HostBinding,
                args: ['attr.aria-orientation']
            }], ariaLabel: [{
                type: HostBinding,
                args: ['attr.aria-label']
            }], ariaLabelledBy: [{
                type: HostBinding,
                args: ['attr.aria-labelledby']
            }], ariaValueNow: [{
                type: HostBinding,
                args: ['attr.aria-valuenow']
            }], ariaValueText: [{
                type: HostBinding,
                args: ['attr.aria-valuetext']
            }], ariaValueMin: [{
                type: HostBinding,
                args: ['attr.aria-valuemin']
            }], ariaValueMax: [{
                type: HostBinding,
                args: ['attr.aria-valuemax']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLWhhbmRsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbmd4LXNsaWRlci9saWIvc2xpZGVyLWhhbmRsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFHVCxXQUFXLEdBRVosTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBS3BFLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxzQkFBc0I7SUFFL0QsTUFBTSxHQUFZLEtBQUssQ0FBQztJQUd4QixJQUFJLEdBQVcsRUFBRSxDQUFDO0lBR2xCLFFBQVEsR0FBVyxFQUFFLENBQUM7SUFHdEIsZUFBZSxHQUFXLEVBQUUsQ0FBQztJQUc3QixTQUFTLEdBQVcsRUFBRSxDQUFDO0lBR3ZCLGNBQWMsR0FBVyxFQUFFLENBQUM7SUFHNUIsWUFBWSxHQUFXLEVBQUUsQ0FBQztJQUcxQixhQUFhLEdBQVcsRUFBRSxDQUFDO0lBRzNCLFlBQVksR0FBVyxFQUFFLENBQUM7SUFHMUIsWUFBWSxHQUFXLEVBQUUsQ0FBQztJQUUxQixLQUFLO1FBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLFFBQVEsQ0FBQyxhQUFhLEtBQUssSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUU7WUFDekQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDcEM7SUFDSCxDQUFDO0lBRUQsWUFDRSxPQUFtQixFQUNuQixRQUFtQixFQUNuQixrQkFBcUM7UUFFckMsS0FBSyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUMvQyxDQUFDO3VHQS9DVSxxQkFBcUI7MkZBQXJCLHFCQUFxQjs7MkZBQXJCLHFCQUFxQjtrQkFIakMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2lCQUM5Qjt1SUFHQyxNQUFNO3NCQURMLFdBQVc7dUJBQUMseUJBQXlCO2dCQUl0QyxJQUFJO3NCQURILFdBQVc7dUJBQUMsV0FBVztnQkFJeEIsUUFBUTtzQkFEUCxXQUFXO3VCQUFDLGVBQWU7Z0JBSTVCLGVBQWU7c0JBRGQsV0FBVzt1QkFBQyx1QkFBdUI7Z0JBSXBDLFNBQVM7c0JBRFIsV0FBVzt1QkFBQyxpQkFBaUI7Z0JBSTlCLGNBQWM7c0JBRGIsV0FBVzt1QkFBQyxzQkFBc0I7Z0JBSW5DLFlBQVk7c0JBRFgsV0FBVzt1QkFBQyxvQkFBb0I7Z0JBSWpDLGFBQWE7c0JBRFosV0FBVzt1QkFBQyxxQkFBcUI7Z0JBSWxDLFlBQVk7c0JBRFgsV0FBVzt1QkFBQyxvQkFBb0I7Z0JBSWpDLFlBQVk7c0JBRFgsV0FBVzt1QkFBQyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIFJlbmRlcmVyMixcbiAgSG9zdEJpbmRpbmcsXG4gIENoYW5nZURldGVjdG9yUmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNsaWRlckVsZW1lbnREaXJlY3RpdmUgfSBmcm9tICcuL3NsaWRlci1lbGVtZW50LmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuZ3hTbGlkZXJIYW5kbGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgU2xpZGVySGFuZGxlRGlyZWN0aXZlIGV4dGVuZHMgU2xpZGVyRWxlbWVudERpcmVjdGl2ZSB7XG4gIEBIb3N0QmluZGluZygnY2xhc3Mubmd4LXNsaWRlci1hY3RpdmUnKVxuICBhY3RpdmU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpXG4gIHJvbGU6IHN0cmluZyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci50YWJpbmRleCcpXG4gIHRhYmluZGV4OiBzdHJpbmcgPSAnJztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1vcmllbnRhdGlvbicpXG4gIGFyaWFPcmllbnRhdGlvbjogc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtbGFiZWwnKVxuICBhcmlhTGFiZWw6IHN0cmluZyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLWxhYmVsbGVkYnknKVxuICBhcmlhTGFiZWxsZWRCeTogc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtdmFsdWVub3cnKVxuICBhcmlhVmFsdWVOb3c6IHN0cmluZyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLXZhbHVldGV4dCcpXG4gIGFyaWFWYWx1ZVRleHQ6IHN0cmluZyA9ICcnO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLXZhbHVlbWluJylcbiAgYXJpYVZhbHVlTWluOiBzdHJpbmcgPSAnJztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS12YWx1ZW1heCcpXG4gIGFyaWFWYWx1ZU1heDogc3RyaW5nID0gJyc7XG5cbiAgZm9jdXMoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtUmVmLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgfVxuXG4gIGZvY3VzSWZOZWVkZWQoKTogdm9pZCB7XG4gICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IHRoaXMuZWxlbVJlZi5uYXRpdmVFbGVtZW50KSB7XG4gICAgICB0aGlzLmVsZW1SZWYubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGVsZW1SZWY6IEVsZW1lbnRSZWYsXG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBjaGFuZ2VEZXRlY3Rpb25SZWY6IENoYW5nZURldGVjdG9yUmVmXG4gICkge1xuICAgIHN1cGVyKGVsZW1SZWYsIHJlbmRlcmVyLCBjaGFuZ2VEZXRlY3Rpb25SZWYpO1xuICB9XG59XG4iXX0=